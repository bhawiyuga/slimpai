#!/bin/bash
# slimpAI Management Script
# Usage: ./slimpy [start|stop|restart|status]

PID_FILE=".slimpy.pid"
LOG_FILE="slimpy.log"
PORT=5000

case "$1" in
    start)
        if [ -f "$PID_FILE" ]; then
            PID=$(cat "$PID_FILE")
            if ps -p $PID > /dev/null 2>&1; then
                echo "‚ùå slimpAI is already running (PID: $PID)"
                echo "   Use './slimpy stop' to stop it first"
                exit 1
            else
                rm "$PID_FILE"
            fi
        fi
        
        echo "üöÄ Starting slimpAI server..."
        nohup python server.py > "$LOG_FILE" 2>&1 &
        echo $! > "$PID_FILE"
        
        sleep 2
        
        if ps -p $(cat "$PID_FILE") > /dev/null 2>&1; then
            echo "‚úÖ slimpAI started successfully!"
            echo "   Server running at: http://localhost:$PORT"
            echo "   PID: $(cat $PID_FILE)"
            echo "   Logs: tail -f $LOG_FILE"
        else
            echo "‚ùå Failed to start slimpAI"
            echo "   Check logs: cat $LOG_FILE"
            rm "$PID_FILE"
            exit 1
        fi
        ;;
        
    stop)
        if [ ! -f "$PID_FILE" ]; then
            echo "‚ùå slimpAI is not running"
            exit 1
        fi
        
        PID=$(cat "$PID_FILE")
        echo "üõë Stopping slimpAI (PID: $PID)..."
        
        kill $PID 2>/dev/null
        
        # Wait for process to stop
        for i in {1..5}; do
            if ! ps -p $PID > /dev/null 2>&1; then
                break
            fi
            sleep 1
        done
        
        # Force kill if still running
        if ps -p $PID > /dev/null 2>&1; then
            echo "   Force stopping..."
            kill -9 $PID 2>/dev/null
        fi
        
        rm "$PID_FILE"
        echo "‚úÖ slimpAI stopped successfully"
        ;;
        
    restart)
        echo "üîÑ Restarting slimpAI..."
        $0 stop
        sleep 1
        $0 start
        ;;
        
    status)
        if [ -f "$PID_FILE" ]; then
            PID=$(cat "$PID_FILE")
            if ps -p $PID > /dev/null 2>&1; then
                echo "‚úÖ slimpAI is running"
                echo "   PID: $PID"
                echo "   Server: http://localhost:$PORT"
                echo "   Logs: tail -f $LOG_FILE"
                
                # Show recent logs
                echo ""
                echo "üìã Recent logs:"
                tail -n 5 "$LOG_FILE" 2>/dev/null || echo "   No logs available"
            else
                echo "‚ùå slimpAI is not running (stale PID file)"
                rm "$PID_FILE"
            fi
        else
            echo "‚ùå slimpAI is not running"
        fi
        ;;
        
    logs)
        if [ -f "$LOG_FILE" ]; then
            echo "üìã Showing slimpAI logs (Ctrl+C to exit):"
            tail -f "$LOG_FILE"
        else
            echo "‚ùå No log file found"
        fi
        ;;
        
    *)
        echo "slimpAI - Smart Learning Intelligence Management"
        echo ""
        echo "Usage: ./slimpy [command]"
        echo ""
        echo "Commands:"
        echo "  start    - Start the slimpAI server"
        echo "  stop     - Stop the slimpAI server"
        echo "  restart  - Restart the slimpAI server"
        echo "  status   - Check server status"
        echo "  logs     - View server logs (live)"
        echo ""
        echo "Examples:"
        echo "  ./slimpy start"
        echo "  ./slimpy status"
        echo "  ./slimpy restart"
        echo ""
        exit 1
        ;;
esac
